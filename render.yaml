# Render Configuration for Astrobalendar Backend
# Docs: https://render.com/docs/deploy-web-service

services:
  # üîß Backend: Node.js Server
  - type: web
    name: astrobalendar-backend
    env: node
    repo: https://github.com/Astrobalendar/blackboxai-1746243407399
    branch: main
    rootDir: apps/backend
    plan: free  # Upgrade to paid for production
    region: oregon  # Choose closest to your users
    
    # Build & Start Commands
    buildCommand: |
      npm install
      npm run build
    startCommand: node dist/server.js
    
    # Auto-deploy settings
    autoDeploy: true
    autoDeployOptions:
      waitForService: true
      wait: 180  # seconds
    
    # Health Check
    healthCheckPath: /health
    healthCheckTimeout: 30
    healthCheckInterval: 300
    
    # Environment Variables
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: NODE_OPTIONS
        value: --max-old-space-size=1024
      - key: LOG_LEVEL
        value: info
      - key: ALLOWED_ORIGINS
        value: https://astrobalendar.netlify.app,https://astrobalendar.com
      - key: JWT_SECRET
        generateValue: true
      - key: MONGODB_URI
        fromDatabase:
          name: astrobalendar-db
          property: connectionString
    
    # Scaling (adjust based on needs)
    scaling:
      maxInstances: 1
      minInstances: 1
      targetCPUUtilizationPercent: 70
    
    # Add-ons (uncomment and configure as needed)
    # addOns:
    #   - name: astrobalendar-redis
    #     type: redis
    #     plan: free
    #     options:
    #       version: 6
    
    # Custom domains (configure in Render dashboard)
    # customDomains:
    #   - name: api.astrobalendar.com
    #     domainType: apex
    #     redirectWww: true
    autoDeploy: true
    
  # üóÑÔ∏è Database: MongoDB (Using Render's Managed MongoDB)
  - type: mongodb
    name: astrobalendar-db
    plan: free
    databaseName: astrobalendar
    ipWhitelist: []  # Will be auto-populated by Render
